const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const Profile = require('../../Schemas/profileSchema');
const moment = require('moment');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('profile-view')
        .setDescription('Views a user profile.')
        .addUserOption(option =>
            option.setName('user')
                .setDescription('The user to view the profile of')
                .setRequired(true)),
    async execute(interaction) {
        const user = interaction.options.getUser('user');
        
        const userProfile = await Profile.findOne({ userId: user.id });

        if (!userProfile) {
            await interaction.reply({ content: `No profile found for ${user.tag}.`, ephemeral: true });
            return;
        }

        const profileEmbed = new EmbedBuilder()
            .setColor('Blue')
            .setTitle(`ðŸ“Œ ${user.tag}'s Profile`)
            .setThumbnail(user.displayAvatarURL({ dynamic: true }))
            .addFields(
                { name: 'ðŸŽµ Favorite Song', value: `\`\`\`${userProfile.favoriteSong || 'Not set'}\`\`\``, inline: true },
                { name: 'ðŸ“– About', value: `\`\`\`${userProfile.about || 'Not set'}\`\`\``, inline: true },
            );

        if (userProfile.birthday) {
            const now = moment();
            let nextBirthday = moment(userProfile.birthday).year(now.year());
            if (nextBirthday.isBefore(now, 'day')) {
                nextBirthday.add(1, 'year');
            }
            const daysUntilBirthday = nextBirthday.diff(now, 'days');
            profileEmbed.addFields({ name: 'ðŸŽ‰ Next Birthday', value: `\`\`\`In ${daysUntilBirthday} day(s)\`\`\``, inline: true });
        }

        if (userProfile.hobbies) {
            profileEmbed.addFields({ name: 'ðŸŽˆ Hobbies', value: `\`\`\`${userProfile.hobbies || 'Not set'}\`\`\``, inline: true });
        }

        if (userProfile.favoriteGame) {
            profileEmbed.addFields({ name: 'ðŸŽ® Favorite Game', value: `\`\`\`${userProfile.favoriteGame || 'Not set'}\`\`\``, inline: true });
        }

        profileEmbed
            .setFooter({ text: `Profile ID: ${userProfile._id}` })
            .setTimestamp(new Date(userProfile.createdAt));

        await interaction.reply({ embeds: [profileEmbed] });
    },
};
